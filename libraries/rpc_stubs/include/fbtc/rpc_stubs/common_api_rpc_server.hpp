//                                   _           _    __ _ _      
//                                  | |         | |  / _(_) |     
//    __ _  ___ _ __   ___ _ __ __ _| |_ ___  __| | | |_ _| | ___ 
//   / _` |/ _ \ '_ \ / _ \ '__/ _` | __/ _ \/ _` | |  _| | |/ _ \`
//  | (_| |  __/ | | |  __/ | | (_| | ||  __/ (_| | | | | | |  __/
//   \__, |\___|_| |_|\___|_|  \__,_|\__\___|\__,_| |_| |_|_|\___|
//    __/ |                                                       
//   |___/                                                        
//
//
// Warning: this is a generated file, any changes made here will be
//          overwritten by the build process.  If you need to change what is
//          generated here, you should either modify the input json files
//          (network_api.json, wallet_api.json, etc) or modify the code
//          generator (fbtc_api_generator.cpp) itself
//
#pragma once
#include <fbtc/api/api_metadata.hpp>
#include <fbtc/api/common_api.hpp>
#include <fc/rpc/json_connection.hpp>

namespace fbtc { namespace rpc_stubs {
  class common_api_rpc_server
  {
  public:
    virtual fbtc::api::common_api* get_client() const = 0;
    virtual void verify_json_connection_is_authenticated(fc::rpc::json_connection* json_connection) const = 0;
    virtual void verify_wallet_is_open() const = 0;
    virtual void verify_wallet_is_unlocked() const = 0;
    virtual void verify_connected_to_network() const = 0;

    virtual void store_method_metadata(const fbtc::api::method_data& method_metadata) = 0;
    fc::variant direct_invoke_positional_method(const std::string& method_name, const fc::variants& parameters);
    void register_common_api_methods(const fc::rpc::json_connection_ptr& json_connection);

    void register_common_api_method_metadata();

    fc::variant about_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant about_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant get_info_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant get_info_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant stop_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant stop_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant help_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant help_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant validate_address_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant validate_address_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant convert_to_native_address_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant convert_to_native_address_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant execute_command_line_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant execute_command_line_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant execute_script_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant execute_script_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant batch_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant batch_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant batch_authenticated_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant batch_authenticated_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant builder_finalize_and_sign_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant builder_finalize_and_sign_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant meta_help_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant meta_help_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant rpc_set_username_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant rpc_set_username_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant rpc_set_password_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant rpc_set_password_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant rpc_start_server_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant rpc_start_server_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant http_start_server_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant http_start_server_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant ntp_update_time_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant ntp_update_time_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant disk_usage_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant disk_usage_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant network_add_node_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant network_add_node_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant network_get_connection_count_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant network_get_connection_count_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant network_get_peer_info_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant network_get_peer_info_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant network_broadcast_transaction_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant network_broadcast_transaction_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant network_set_advanced_node_parameters_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant network_set_advanced_node_parameters_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant network_get_advanced_node_parameters_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant network_get_advanced_node_parameters_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant network_get_transaction_propagation_data_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant network_get_transaction_propagation_data_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant network_get_block_propagation_data_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant network_get_block_propagation_data_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant network_set_allowed_peers_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant network_set_allowed_peers_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant network_get_info_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant network_get_info_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant network_list_potential_peers_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant network_list_potential_peers_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant network_get_upnp_info_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant network_get_upnp_info_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant network_get_usage_stats_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant network_get_usage_stats_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant delegate_get_config_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant delegate_get_config_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant delegate_set_network_min_connection_count_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant delegate_set_network_min_connection_count_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant delegate_set_block_max_transaction_count_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant delegate_set_block_max_transaction_count_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant delegate_set_block_max_size_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant delegate_set_block_max_size_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant delegate_set_block_max_production_time_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant delegate_set_block_max_production_time_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant delegate_set_transaction_max_size_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant delegate_set_transaction_max_size_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant delegate_set_transaction_canonical_signatures_required_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant delegate_set_transaction_canonical_signatures_required_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant delegate_set_transaction_min_fee_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant delegate_set_transaction_min_fee_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant delegate_blacklist_add_transaction_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant delegate_blacklist_add_transaction_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant delegate_blacklist_remove_transaction_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant delegate_blacklist_remove_transaction_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant delegate_blacklist_add_operation_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant delegate_blacklist_add_operation_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant delegate_blacklist_remove_operation_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant delegate_blacklist_remove_operation_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_get_info_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_get_info_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_generate_snapshot_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_generate_snapshot_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_graphene_snapshot_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_graphene_snapshot_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_generate_issuance_map_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_generate_issuance_map_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_calculate_supply_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_calculate_supply_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_calculate_debt_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_calculate_debt_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_calculate_max_supply_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_calculate_max_supply_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_get_block_count_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_get_block_count_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_list_accounts_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_list_accounts_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_list_recently_updated_accounts_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_list_recently_updated_accounts_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_list_recently_registered_accounts_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_list_recently_registered_accounts_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_list_assets_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_list_assets_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_list_feed_prices_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_list_feed_prices_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_get_account_wall_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_get_account_wall_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_list_pending_transactions_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_list_pending_transactions_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_get_pending_transactions_count_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_get_pending_transactions_count_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_get_transaction_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_get_transaction_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_get_block_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_get_block_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_get_block_transactions_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_get_block_transactions_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_get_account_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_get_account_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_get_slate_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_get_slate_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_get_balance_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_get_balance_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_list_balances_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_list_balances_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_list_address_balances_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_list_address_balances_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_list_address_transactions_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_list_address_transactions_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_get_account_public_balance_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_get_account_public_balance_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_median_feed_price_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_median_feed_price_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_list_key_balances_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_list_key_balances_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_get_asset_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_get_asset_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_get_feeds_for_asset_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_get_feeds_for_asset_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_get_feeds_from_delegate_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_get_feeds_from_delegate_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_market_list_bids_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_market_list_bids_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_market_list_asks_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_market_list_asks_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_market_list_shorts_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_market_list_shorts_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_market_list_covers_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_market_list_covers_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_market_get_asset_collateral_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_market_get_asset_collateral_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_market_order_book_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_market_order_book_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_get_market_order_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_get_market_order_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_list_address_orders_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_list_address_orders_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_market_order_history_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_market_order_history_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_market_price_history_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_market_price_history_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_list_active_delegates_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_list_active_delegates_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_list_delegates_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_list_delegates_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_list_blocks_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_list_blocks_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_list_missing_block_delegates_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_list_missing_block_delegates_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_export_fork_graph_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_export_fork_graph_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_list_forks_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_list_forks_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_get_delegate_slot_records_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_get_delegate_slot_records_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_get_block_signee_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_get_block_signee_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_list_markets_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_list_markets_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_list_market_transactions_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_list_market_transactions_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_market_status_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_market_status_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_unclaimed_genesis_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_unclaimed_genesis_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_verify_signature_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_verify_signature_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant blockchain_broadcast_transaction_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant blockchain_broadcast_transaction_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_get_info_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_get_info_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_open_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_open_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_get_account_public_address_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_get_account_public_address_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_list_my_addresses_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_list_my_addresses_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_create_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_create_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_import_private_key_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_import_private_key_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_import_bitcoin_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_import_bitcoin_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_import_electrum_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_import_electrum_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_import_keyhotee_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_import_keyhotee_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_import_keys_from_json_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_import_keys_from_json_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_close_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_close_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_backup_create_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_backup_create_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_backup_restore_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_backup_restore_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_export_keys_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_export_keys_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_set_automatic_backups_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_set_automatic_backups_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_set_transaction_expiration_time_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_set_transaction_expiration_time_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_account_transaction_history_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_account_transaction_history_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_account_historic_balance_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_account_historic_balance_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_transaction_history_experimental_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_transaction_history_experimental_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_remove_transaction_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_remove_transaction_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_get_pending_transaction_errors_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_get_pending_transaction_errors_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_lock_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_lock_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_unlock_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_unlock_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_change_passphrase_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_change_passphrase_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_list_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_list_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_account_create_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_account_create_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_list_contacts_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_list_contacts_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_get_contact_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_get_contact_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_add_contact_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_add_contact_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_remove_contact_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_remove_contact_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_list_approvals_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_list_approvals_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_get_approval_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_get_approval_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_approve_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_approve_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_burn_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_burn_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_address_create_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_address_create_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_transfer_to_address_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_transfer_to_address_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_transfer_to_genesis_multisig_address_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_transfer_to_genesis_multisig_address_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_transfer_to_address_from_file_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_transfer_to_address_from_file_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_transfer_to_genesis_multisig_address_from_file_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_transfer_to_genesis_multisig_address_from_file_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_check_passphrase_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_check_passphrase_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_transfer_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_transfer_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_multisig_get_balance_id_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_multisig_get_balance_id_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_multisig_deposit_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_multisig_deposit_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_withdraw_from_address_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_withdraw_from_address_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_receive_genesis_multisig_blanace_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_receive_genesis_multisig_blanace_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_withdraw_from_legacy_address_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_withdraw_from_legacy_address_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_multisig_withdraw_start_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_multisig_withdraw_start_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_builder_add_signature_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_builder_add_signature_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_builder_file_add_signature_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_builder_file_add_signature_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_release_escrow_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_release_escrow_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_transfer_from_with_escrow_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_transfer_from_with_escrow_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_rescan_blockchain_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_rescan_blockchain_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_cancel_scan_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_cancel_scan_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_get_transaction_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_get_transaction_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_scan_transaction_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_scan_transaction_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_scan_transaction_experimental_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_scan_transaction_experimental_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_add_transaction_note_experimental_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_add_transaction_note_experimental_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_rebroadcast_transaction_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_rebroadcast_transaction_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_account_register_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_account_register_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_set_custom_data_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_set_custom_data_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_account_update_registration_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_account_update_registration_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_account_update_active_key_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_account_update_active_key_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_list_accounts_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_list_accounts_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_get_account_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_get_account_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_account_rename_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_account_rename_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_mia_create_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_mia_create_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_uia_create_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_uia_create_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_uia_issue_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_uia_issue_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_uia_issue_to_addresses_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_uia_issue_to_addresses_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_uia_collect_fees_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_uia_collect_fees_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_uia_update_description_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_uia_update_description_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_uia_update_supply_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_uia_update_supply_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_uia_update_fees_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_uia_update_fees_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_uia_update_active_flags_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_uia_update_active_flags_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_uia_update_authority_permissions_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_uia_update_authority_permissions_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_uia_update_whitelist_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_uia_update_whitelist_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_uia_retract_balance_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_uia_retract_balance_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_escrow_summary_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_escrow_summary_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_account_balance_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_account_balance_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_account_balance_ids_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_account_balance_ids_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_account_balance_extended_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_account_balance_extended_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_account_vesting_balances_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_account_vesting_balances_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_account_yield_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_account_yield_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_account_list_public_keys_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_account_list_public_keys_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_delegate_withdraw_pay_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_delegate_withdraw_pay_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_set_transaction_fee_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_set_transaction_fee_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_get_transaction_fee_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_get_transaction_fee_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_market_submit_bid_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_market_submit_bid_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_market_submit_ask_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_market_submit_ask_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_market_submit_short_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_market_submit_short_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_market_cover_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_market_cover_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_market_batch_update_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_market_batch_update_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_market_add_collateral_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_market_add_collateral_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_market_order_list_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_market_order_list_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_account_order_list_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_account_order_list_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_market_cancel_order_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_market_cancel_order_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_market_cancel_orders_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_market_cancel_orders_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_dump_private_key_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_dump_private_key_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_dump_account_private_key_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_dump_account_private_key_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_account_vote_summary_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_account_vote_summary_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_set_setting_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_set_setting_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_get_setting_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_get_setting_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_delegate_set_block_production_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_delegate_set_block_production_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_set_transaction_scanning_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_set_transaction_scanning_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_sign_hash_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_sign_hash_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_login_start_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_login_start_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_login_finish_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_login_finish_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_balance_set_vote_info_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_balance_set_vote_info_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_publish_slate_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_publish_slate_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_publish_version_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_publish_version_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_collect_genesis_balances_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_collect_genesis_balances_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_collect_vested_balances_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_collect_vested_balances_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_delegate_update_signing_key_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_delegate_update_signing_key_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_recover_accounts_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_recover_accounts_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_recover_titan_deposit_info_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_recover_titan_deposit_info_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_verify_titan_deposit_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_verify_titan_deposit_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_publish_price_feed_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_publish_price_feed_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_publish_feeds_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_publish_feeds_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_publish_feeds_multi_experimental_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_publish_feeds_multi_experimental_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_repair_records_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_repair_records_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_regenerate_keys_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_regenerate_keys_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_account_retract_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_account_retract_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant wallet_generate_brain_seed_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant wallet_generate_brain_seed_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant fetch_welcome_package_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant fetch_welcome_package_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant request_register_account_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant request_register_account_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant approve_register_account_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant approve_register_account_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant debug_start_simulated_time_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant debug_start_simulated_time_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant debug_advance_time_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant debug_advance_time_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant debug_trap_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant debug_trap_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant debug_wait_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant debug_wait_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant debug_wait_for_block_by_number_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant debug_wait_for_block_by_number_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant debug_wait_block_interval_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant debug_wait_block_interval_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant debug_enable_output_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant debug_enable_output_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant debug_filter_output_for_tests_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant debug_filter_output_for_tests_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant debug_update_logging_config_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant debug_update_logging_config_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant debug_get_call_statistics_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant debug_get_call_statistics_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant debug_get_client_name_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant debug_get_client_name_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant debug_deterministic_private_keys_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant debug_deterministic_private_keys_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant debug_stop_before_block_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant debug_stop_before_block_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant debug_verify_market_matching_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant debug_verify_market_matching_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
    fc::variant debug_list_matching_errors_positional(fc::rpc::json_connection* json_connection, const fc::variants& parameters);
    fc::variant debug_list_matching_errors_named(fc::rpc::json_connection* json_connection, const fc::variant_object& parameters);
  };

} } // end namespace fbtc::rpc_stubs
