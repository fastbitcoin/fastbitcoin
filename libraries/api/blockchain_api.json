{
  "category": "Blockchain Methods",
  "methods" :
    [
      {
        "method_name": "blockchain_get_info",
        "description": "Returns current blockchain information and parameters",
        "cached"      : true,
        "return_type": "json_object",
        "parameters" : [],
        "is_const"   : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["getconfig","get_config", "config", "blockchain_get_config"]
      },
      {
        "method_name": "blockchain_generate_snapshot",
        "description": "Save snapshot of current base asset balances to specified file",
        "return_type": "void",
        "parameters" : [
            {
              "name" : "filename",
              "type" : "string",
              "description" : "filename to save snapshot to"
            }
        ],
        "is_const"   : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : []
      },
      {
        "method_name": "blockchain_graphene_snapshot",
        "description": "Save snapshot of current state to specified file in Graphene genesis format",
        "return_type": "void",
        "parameters" : [
            {
              "name" : "filename",
              "type" : "string",
              "description" : "filename to save snapshot to"
            },
            {
              "name" : "whitelist_filename",
              "type" : "string",
              "description" : "filename containing set of account names to whitelist from name-prefixing",
              "default_value" : ""
            }
        ],
        "is_const"   : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : []
      },
      {
        "method_name": "blockchain_generate_issuance_map",
        "description": "A utility to help verify UIA distribution. Returns a snapshot map of all issuances for a particular UIA.",
        "return_type": "void",
        "parameters" : [
            {
              "name" : "symbol",
              "type" : "string",
              "description" : "the UIA for which to compute issuance map"
            },
            {
              "name" : "filename",
              "type" : "string",
              "description" : "filename to save snapshot to"
            }
        ],
        "is_const"   : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : []
      },
      {
        "method_name": "blockchain_calculate_supply",
        "description": "Calculate the total supply of an asset from the current blockchain database state",
        "cached"      : true,
        "return_type": "asset",
        "parameters" : [
            {
              "name" : "asset",
              "type" : "string",
              "description" : "asset ticker symbol or ID to calculate supply for"
            }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["supply", "calculate_supply"]
      },
      {
        "method_name": "blockchain_calculate_debt",
        "description": "Calculate the total amount of a market-issued asset that is owed to the network by open short positions",
        "cached"   : true,
        "return_type": "asset",
        "parameters" : [
            {
              "name" : "asset",
              "type" : "string",
              "description" : "asset ticker symbol or ID to calculate debt for"
            },
            {
              "name" : "include_interest",
              "type" : "bool",
              "description" : "true to include current outstanding interest and false otherwise",
              "default_value" : "false"
            }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["debt", "calculate_debt"]
      },
      {
        "method_name": "blockchain_calculate_max_supply",
        "description": "Calculate the maximum possible supply of the core asset from the current time assuming a maximum dilution schedule",
        "cached"      : true,
        "return_type": "asset",
        "parameters" : [
            {
              "name" : "average_delegate_pay_rate",
              "type" : "uint8_t",
              "description" : "average delegate pay rate percentage",
              "default_value" : 100
            }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["max_supply", "calculate_max_supply"]
      },
      {
        "method_name": "blockchain_get_block_count",
        "description": "Returns the current head block number",
        "return_type": "uint32_t",
        "cached"   : true,
        "parameters" : [],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["blockchain_get_blockcount", "getblockcount"]
      },
      {
        "method_name": "blockchain_list_accounts",
        "description": "Returns registered accounts starting with a given name upto a the limit provided",
        "return_type": "account_record_array",
        "cached"   : true,
        "parameters" : [
            {
              "name" : "first_account_name",
              "type" : "account_name",
              "description" : "the first account name to include",
              "default_value" : ""
            },
            {
              "name" : "limit",
              "type" : "uint32_t",
              "description" : "the maximum number of items to list",
              "default_value" : 20
            }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"]
      },
      {
        "method_name": "blockchain_list_recently_updated_accounts",
        "description": "Returns a list of recently updated accounts",
        "cached"   : true,
        "return_type": "account_record_array",
        "parameters" : [],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"]
      },
      {
        "method_name": "blockchain_list_recently_registered_accounts",
        "description": "Returns a list of recently registered accounts",
        "cached"   : true,
        "return_type": "account_record_array",
        "parameters" : [],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"]
      },
      {
        "method_name": "blockchain_list_assets",
        "description": "Returns registered assets starting with a given name upto a the limit provided",
        "cached"   : true,
        "return_type": "asset_record_array",
        "parameters" : [
            {
              "name" : "first_symbol",
              "type" : "asset_symbol",
              "description" : "the prefix of the first asset symbol name to include",
              "default_value" : ""
            },
            {
              "name" : "limit",
              "type" : "uint32_t",
              "description" : "the maximum number of items to list",
              "default_value" : 20
            }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"]
      },
      {
        "method_name": "blockchain_list_feed_prices",
        "description": "Returns a list of all currently valid feed prices",
        "cached"   : true,
        "return_type": "string_map",
        "parameters" : [],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"]
      },
      {
        "method_name": "blockchain_get_account_wall",
        "description": "returns all burn records associated with an account",
        "cached"   : true,
        "return_type": "burn_records",
        "parameters" : [
            {
              "name" : "account_name",
              "type" : "account_name",
              "description" : "the name of the account to fetch the burn records for",
              "default_value" : ""
            }
           ],
        "is_const"   : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["wall"]
      },
      {
        "method_name": "blockchain_list_pending_transactions",
        "description": "Return a list of transactions that are not yet in a block.",
        "return_type": "signed_transaction_array",
        "parameters" : [],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["blockchain_get_pending_transactions", "list_pending"]
      },
	  {
        "method_name": "blockchain_get_pending_transactions_count",
        "description": "Return pending transactions count.",
        "return_type": "int32_t",
        "parameters" : [],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"]
      },
      {
        "method_name": "blockchain_get_transaction",
        "description": "Get detailed information about the specified transaction in the blockchain",
        "cached"   : true,
        "return_type": "transaction_record_pair",
        "parameters" : [
            {
              "name" : "transaction_id_prefix",
              "type" : "string",
              "description" : "the base58 transaction ID to return"
            },
            {
               "name" : "exact",
               "type" : "bool",
               "description" : "whether or not a partial match is ok",
               "default_value" : false
            }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"]
      },
      {
        "method_name": "blockchain_get_block",
        "description": "Retrieves the block record for the given block number, ID or timestamp",
        "cached"   : true,
        "return_type": "oblock_record",
        "parameters" : [
            {
              "name" : "block",
              "type" : "string",
              "description" : "timestamp, number or ID of the block to retrieve"
            }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["get_block", "getblock", "blockchain_get_block_hash", "blockchain_get_blockhash", "getblockhash"]
      },
      {
        "method_name": "blockchain_get_block_transactions",
        "description": "Retrieves the detailed transaction information for a block",
        "cached"   : true,
        "return_type": "transaction_record_map",
        "parameters" : [
            {
              "name" : "block",
              "type" : "string",
              "description" : "the number or id of the block to get transactions from"
            }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"]
      },
      {
        "method_name": "blockchain_get_account",
        "description": "Retrieves the record for the given account name or ID",
        "cached"   : true,
        "return_type": "optional_account_record",
        "parameters" : [
            {
              "name" : "account",
              "type" : "string",
              "description" : "account name, ID, or public key to retrieve the record for"
            }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["get_account"]
      },
      {
        "method_name": "blockchain_get_slate",
        "description": "Retrieves a map of delegate IDs and names defined by the given slate ID or recommending account",
        "cached"   : true,
        "return_type": "map<account_id_type, string>",
        "parameters" : [
            {
              "name" : "slate",
              "type" : "string",
              "description" : "slate ID or recommending account name for which to retrieve the slate of delegates"
            }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["get_slate"]
      },
      {
        "method_name": "blockchain_get_balance",
        "description": "Retrieves the specified balance record",
        "cached"   : true,
        "return_type": "balance_record",
        "parameters" : [
            {
              "name" : "balance_id",
              "type" : "address",
              "description" : "the ID of the balance record"
            }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["get_balance"]
      },
      {
        "method_name": "blockchain_list_balances",
        "description": "Lists balance records for the specified asset",
        "cached"   : true,
        "return_type": "balance_record_map",
        "parameters" : [
            {
              "name" : "asset",
              "type" : "string",
              "description" : "the symbol or ID of the asset to list balances for, or empty to include all assets",
              "default_value" : "0"
            },
            {
              "name" : "limit",
              "type" : "uint32_t",
              "description" : "the maximum number of items to list",
              "default_value" : 20
            }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["list_balances"]
      },
      {
        "method_name": "blockchain_list_address_balances",
        "description": "Lists balance records which are the balance IDs or which can be claimed by signature for this address",
        "cached"   : true,
        "return_type": "balance_record_map",
        "parameters" : [
            {
              "name" : "addr",
              "type" : "string",
              "description" : "address to scan for"
            },
            {
               "name" : "chanced_since",
               "type" : "timestamp",
               "description" : "Filter all balances that haven't chanced since the provided timestamp",
               "default_value" : "1970-1-1T00:00:01"
            }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["list_address_balances"]
      },
      {
        "method_name": "blockchain_list_address_transactions",
        "description": "Lists all transactions that involve the provided address after the specified time",
        "cached"   : true,
        "return_type": "variant_object",
        "parameters" : [
            {
              "name" : "addr",
              "type" : "string",
              "description" : "address to scan for"
            },
            {
               "name" : "filter_before",
               "type" : "uint32_t",
               "description" : "Filter all transactions that occured prior to the specified block number",
               "default_value" : "0"
            }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["list_address_transactions"]
      },
      {
         "method_name" : "blockchain_get_account_public_balance",
         "description" : "Get the public balances associated with the specified account name; this command can take a long time",
         "return_type" : "asset_balance_map",
         "parameters"  : [
               {
                  "name" : "account_name",
                  "type" : "account_name",
                  "description" : "the account name to query public balances for"
               }
            ],
         "is_const" : true,
         "prerequisites" : ["no_prerequisites"],
         "cached"   : true
      },
      {
         "method_name" : "blockchain_median_feed_price",
         "description" : "Get the account record for a given name",
         "cached"   : true,
         "return_type" : "string",
         "parameters"  : [
               {
                  "name" : "symbol",
                  "type" : "asset_symbol",
                  "description" : "the asset symbol to fetch the median price of in FBTC"
               }
            ],
         "is_const" : true,
         "prerequisites" : []
      },
      {
        "method_name": "blockchain_list_key_balances",
        "description": "Lists balance records which can be claimed by signature for this key",
        "cached"   : true,
        "return_type": "balance_record_map",
        "parameters" : [
            {
              "name" : "key",
              "type" : "public_key",
              "description" : "Key to scan for"
            }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["list_key_balances"]
      },
      {
        "method_name": "blockchain_get_asset",
        "description": "Retrieves the record for the given asset ticker symbol or ID",
        "cached"   : true,
        "return_type": "optional_asset_record",
        "parameters" : [
            {
              "name" : "asset",
              "type" : "string",
              "description" : "asset ticker symbol or ID to retrieve"
            }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["get_asset"]
      },
      {
        "method_name": "blockchain_get_feeds_for_asset",
        "description": "Retrieves all current feeds for the given asset",
        "cached"   : true,
        "return_type": "feed_entry_list",
        "parameters" : [
            {
              "name" : "asset",
              "type" : "string",
              "description" : "asset ticker symbol or ID to retrieve"
            }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"]
      },
      {
        "method_name": "blockchain_get_feeds_from_delegate",
        "description": "Retrieves all current feeds published by the given delegate",
        "cached"   : true,
        "return_type": "feed_entry_list",
        "parameters" : [
            {
              "name" : "delegate_name",
              "type" : "string",
              "description" : "the name of the delegate to list feeds from"
            }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"]
      },
      {
        "method_name" : "blockchain_market_list_bids",
        "description" : "Returns the bid side of the order book for a given market",
        "cached"      : true,
        "return_type" : "market_order_array",
        "parameters"  : [
           {
              "name" : "quote_symbol",
              "type" : "asset_symbol",
              "description" : "the symbol name the market is quoted in"
           },
           {
              "name" : "base_symbol",
              "type" : "asset_symbol",
              "description" : "the item being bought in this market"
           },
           {
              "name" : "limit",
              "type" : "uint32_t",
              "description" : "the maximum number of items to return, -1 for all",
              "default_value" : "-1"
           }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["market_bids"]
      },
      {
        "method_name" : "blockchain_market_list_asks",
        "description" : "Returns the ask side of the order book for a given market",
        "cached"      : true,
        "return_type" : "market_order_array",
        "parameters"  : [
           {
              "name" : "quote_symbol",
              "type" : "asset_symbol",
              "description" : "the symbol name the market is quoted in"
           },
           {
              "name" : "base_symbol",
              "type" : "asset_symbol",
              "description" : "the item being bought in this market"
           },
           {
              "name" : "limit",
              "type" : "uint32_t",
              "description" : "the maximum number of items to return, -1 for all",
              "default_value" : "-1"
           }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["market_asks"]
      },
      {
        "method_name" : "blockchain_market_list_shorts",
        "description" : "Returns the short side of the order book for a given market",
        "cached"      : true,
        "return_type" : "market_order_array",
        "parameters"  : [
           {
              "name" : "quote_symbol",
              "type" : "asset_symbol",
              "description" : "the symbol name the market is quoted in"
           },
           {
              "name" : "limit",
              "type" : "uint32_t",
              "description" : "the maximum number of items to return, -1 for all",
              "default_value" : "-1"
           }
        ],
        "prerequisites" : ["no_prerequisites"],
        "is_const" : true,
        "aliases" : ["market_shorts"]
      },
      {
        "method_name" : "blockchain_market_list_covers",
        "description" : "Returns the covers side of the order book for a given market",
        "cached"      : true,
        "return_type" : "market_order_array",
        "parameters"  : [
           {
              "name" : "quote_symbol",
              "type" : "asset_symbol",
              "description" : "the symbol name the market is quoted in"
           },
           {
              "name" : "base_symbol",
              "type" : "asset_symbol",
              "description" : "the symbol name the market is collateralized in",
              "default_value" : "XTS"
           },
           {
              "name" : "limit",
              "type" : "uint32_t",
              "description" : "the maximum number of items to return, -1 for all",
              "default_value" : "-1"
           }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["market_covers"]
      },
      {
        "method_name" : "blockchain_market_get_asset_collateral",
        "description" : "Returns the total collateral for an asset of a given type",
        "cached"      : true,
        "return_type" : "share_type",
        "parameters"  : [
           {
              "name" : "symbol",
              "type" : "asset_symbol",
              "description" : "the symbol for the asset to count collateral for"
           }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["collateral"]
      },
      {
        "method_name" : "blockchain_market_order_book",
        "description" : "Returns the long and short sides of the order book for a given market",
        "cached"      : true,
        "return_type" : "pair<market_order_array,market_order_array>",
        "parameters"  : [
           {
              "name" : "quote_symbol",
              "type" : "asset_symbol",
              "description" : "the symbol name the market is quoted in"
           },
           {
              "name" : "base_symbol",
              "type" : "asset_symbol",
              "description" : "the item being bought in this market"
           },
           {
              "name" : "limit",
              "type" : "uint32_t",
              "description" : "the maximum number of items to return, -1 for all",
              "default_value" : "10"
           }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["market_book"]
      },
      {
        "method_name" : "blockchain_get_market_order",
        "description" : "Fetch an order",
        "cached"      : true,
        "return_type" : "market_order",
        "parameters"  : [
           {
              "name" : "order_id",
              "type" : "string",
              "description" : "market order id"
           }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : []
      },
      {
        "method_name" : "blockchain_list_address_orders",
        "description" : "List an order list of a specific market",
        "cached"      : true,
        "return_type" : "market_order_map",
        "parameters"  : [
           {
              "name" : "base_symbol",
              "type" : "asset_symbol",
              "description" : "the base symbol of the market"
           },
           {
              "name" : "quote_symbol",
              "type" : "asset_symbol",
              "description" : "the quote symbol of the market"
           },
           {
               "name" : "account_address",
               "type" : "string",
               "description" : "the account for which to get the orders"
           },
           {
              "name" : "limit",
              "type" : "uint32_t",
              "description" : "the maximum number of items to return, -1 for all",
              "default_value" : "10"
           }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : []
      },
      {
        "method_name": "blockchain_market_order_history",
        "description": "Returns a list of recently filled orders in a given market, in reverse order of execution.",
        "cached"     : true,
        "return_type": "order_history_record_array",
        "parameters" : [
           {
              "name" : "quote_symbol",
              "type" : "asset_symbol",
              "description" : "the symbol name the market is quoted in"
           },
           {
              "name" : "base_symbol",
              "type" : "asset_symbol",
              "description" : "the item being bought in this market"
           },
           {
             "name" : "skip_count",
             "type" : "uint32_t",
             "description" : "Number of transactions before head block to skip in listing",
             "default_value" : "0"
           },
           {
              "name" : "limit",
              "type" : "uint32_t",
              "description" : "The maximum number of transactions to list",
              "default_value" : "20"
           },
           {
              "name" : "owner",
              "type" : "string",
              "description" : "If present, only transactions belonging to this owner key will be returned",
              "default_value" : ""
           }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"]
      },
      {
        "method_name": "blockchain_market_price_history",
        "description": "Returns historical data on orders matched within the given timeframe for the specified market",
        "cached"     : true,
        "return_type": "market_history_points",
        "parameters" : [
           {
              "name" : "quote_symbol",
              "type" : "asset_symbol",
              "description" : "the symbol name the market is quoted in"
           },
           {
              "name" : "base_symbol",
              "type" : "asset_symbol",
              "description" : "the item being bought in this market"
           },
           {
             "name" : "start_time",
             "type" : "timestamp",
             "description" : "The time to begin getting price history for"
           },
           {
              "name" : "duration",
              "type" : "time_interval_in_seconds",
              "description" : "The maximum time period to get price history for"
           },
           {
              "name" : "granularity",
              "type" : "market_history_key::time_granularity",
              "description" : "The frequency of price updates (each_block, each_hour, or each_day)",
              "default_value" : "each_block"
           }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"]
      },
      {
         "method_name" : "blockchain_list_active_delegates",
         "description" : "Returns a list of the current round's active delegates in signing order",
         "cached"      : true,
         "return_type" : "account_record_array",
         "parameters" : [
             {
               "name" : "first",
               "type" : "uint32_t",
               "description" : "",
               "default_value" : 0
             },
             {
               "name" : "count",
               "type" : "uint32_t",
               "description" : "",
               "default_value" : 20
             }
         ],
         "is_const" : true,
         "aliases" : ["blockchain_get_active_delegates"],
         "prerequisites" : ["no_prerequisites"]
      },
      {
        "method_name": "blockchain_list_delegates",
        "description": "Returns a list of all the delegates sorted by vote",
         "cached"      : true,
        "return_type": "account_record_array",
        "parameters" : [
            {
              "name" : "first",
              "type" : "uint32_t",
              "description" : "",
              "default_value" : 0
            },
            {
              "name" : "count",
              "type" : "uint32_t",
              "description" : "",
              "default_value" : 20
            }
        ],
        "is_const" : true,
        "aliases" : ["blockchain_get_delegates"],
        "prerequisites" : ["no_prerequisites"]
      },
      {
         "method_name" : "blockchain_list_blocks",
         "description" : "Returns a descending list of block records starting from the specified block number",
         "cached"      : true,
         "return_type" : "block_record_array",
         "parameters"  : [
            {
               "name" : "max_block_num",
               "type" : "uint32_t",
               "description" : "the block num to start from; negative to count backwards from the current head block",
               "default_value" : -1
            },
            {
               "name" : "limit",
               "type" : "uint32_t",
               "description" : "max number of blocks to return",
               "default_value" : 20
            }
         ],
         "aliases" : ["list_blocks"],
         "prerequisites" : ["no_prerequisites"]
      },
      {
         "method_name" : "blockchain_list_missing_block_delegates",
         "description" : "Returns any delegates who were supposed to produce a given block number but didn't",
         "cached"      : true,
         "return_type" : "account_name_array",
         "parameters"  : [
            {
               "name" : "block_number",
               "type" : "uint32_t",
               "description" : "The block to examine"
            }
         ],
         "prerequisites" : ["no_prerequisites"]
      },
      {
         "method_name" : "blockchain_export_fork_graph",
         "description" : "dumps the fork data to graphviz format",
         "return_type" : "string",
         "parameters"  : [
            {
               "name" : "start_block",
               "type" : "uint32_t",
               "description" : "the first block number to consider",
               "default_value" : 1
            },
            {
               "name" : "end_block",
               "type" : "uint32_t",
               "description" : "the last block number to consider",
               "default_value" : -1
            },
            {
               "name" : "filename",
               "type" : "string",
               "description" : "the filename to save to",
               "default_value" : ""
            }
         ],
         "is_const" : true,
         "aliases" : ["export_forks"],
         "prerequisites" : ["no_prerequisites"]
      },
      {
         "method_name" : "blockchain_list_forks",
         "description" : "returns a list of all blocks for which there is a fork off of the main chain",
         "cached"      : true,
         "return_type" : "map<uint32_t, vector<fork_record>>",
         "parameters"  : [],
         "is_const" : true,
         "aliases" : ["list_forks"],
         "prerequisites" : ["no_prerequisites"]
      },
      {
        "method_name": "blockchain_get_delegate_slot_records",
        "description": "Query the most recent block production slot records for the specified delegate",
         "cached"      : true,
        "return_type": "slot_records_list",
        "parameters" : [
            {
              "name" : "delegate_name",
              "type" : "string",
              "description" : "Delegate whose block production slot records to query"
            },
            {
              "name" : "limit",
              "type" : "uint32_t",
              "description" : "The maximum number of slot records to return",
              "default_value" : "10"
            }
        ],
        "is_const" : true,
         "aliases" : ["get_slot"],
        "prerequisites" : ["no_prerequisites"]
      },
      {
        "method_name": "blockchain_get_block_signee",
        "description": "Get the delegate that signed a given block",
         "cached"      : true,
        "return_type": "string",
        "parameters" : [
            {
              "name" : "block",
              "type" : "string",
              "description" : "block number or ID to retrieve the signee for"
            }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"]
      },
      {
        "method_name": "blockchain_list_markets",
        "description": "Returns a list of active markets",
         "cached"      : true,
        "return_type": "market_status_array",
        "parameters" : [],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"]
      },
      {
        "method_name": "blockchain_list_market_transactions",
        "description": "Returns a list of market transactions executed on a given block.",
         "cached"      : true,
        "return_type": "market_transaction_array",
        "parameters" : [
            {
              "name" : "block_number",
              "type" : "uint32_t",
              "description" : "Block to get market operations for."
            }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"]
      },
      {
        "method_name": "blockchain_market_status",
        "description": "Returns the status of a particular market, including any trading errors.",
         "cached"      : true,
        "return_type": "market_status",
        "parameters" : [
            {
              "name" : "quote_symbol",
              "type" : "asset_symbol",
              "description" : "quote symbol"
            },
            {
              "name" : "base_symbol",
              "type" : "asset_symbol",
              "description" : "base symbol"
            }
        ],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"]
      },
      {
        "method_name": "blockchain_unclaimed_genesis",
        "description": "Returns the total shares in the genesis block which have never been fully or partially claimed.",
         "cached"      : true,
        "return_type": "asset",
        "parameters" : [],
        "is_const" : true,
        "prerequisites" : ["no_prerequisites"]
      },
      {
        "method_name": "blockchain_verify_signature",
        "description": "Verify that the given signature proves the given hash was signed by the given account.",
         "cached"      : true,
        "return_type": "bool",
        "parameters" : [
            {
                "name" : "signer",
                "type" : "string",
                "description" : "A public key, address, or account name whose signature to check"
            },
            {
                "name" : "hash",
                "type" : "sha256",
                "description" : "The hash the signature claims to be for"
            },
            {
                "name" : "signature",
                "type" : "compact_signature",
                "description" : "A signature produced by wallet_sign_hash"
            }
        ],
        "is_const"   : true,
        "prerequisites" : ["no_prerequisites"],
        "aliases" : ["verify_signature", "verify_sig", "blockchain_verify_sig"]
      },
      {
        "method_name": "blockchain_broadcast_transaction",
        "description": "Takes a signed transaction and broadcasts it to the network.",
         "cached"      : true,
        "return_type": "void",
        "parameters"  : [
           {
              "name" : "trx",
              "type" : "signed_transaction",
              "description" : "The transaction to broadcast"
           }
        ],
        "is_const"   : false,
        "prerequisites" : ["no_prerequisites"]
      }
    ]
}
