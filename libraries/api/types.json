{
  "type_map":
    [
      {
        "type_name" : "block_id_type",
        "cpp_return_type" : "fbtc::blockchain::block_id_type",
        "cpp_include_file" : "fbtc/blockchain/types.hpp"
      },
      {
        "type_name" : "account_name",
        "cpp_return_type" : "std::string",
        "cpp_include_file" : "string",
        "default_example" : "Bob"
      },
      {
        "type_name" : "account_name_array",
        "container_type": "array",
        "contained_type": "account_name"
      },
      {
        "type_name" : "new_account_name",
        "cpp_return_type" : "std::string",
        "cpp_include_file" : "string",
        "default_example" : "Carol"
      },
      {
        "type_name" : "account_address_data",
        "cpp_return_type" : "fbtc::wallet::account_address_data",
        "cpp_include_file" : "fbtc/wallet/wallet_records.hpp"
      },
      {
        "type_name" : "account_address_data_array",
        "container_type" : "array",
        "contained_type" : "account_address_data"
      },
      {
         "type_name" : "balance_record",
         "cpp_return_type" : "fbtc::blockchain::balance_record"
      },
      {
         "type_name" : "balance_record_map",
         "cpp_return_type" : "std::unordered_map<fbtc::blockchain::balance_id_type, fbtc::blockchain::balance_record>"
      },
      {
         "type_name" : "balance_record_list",
         "cpp_return_type" : "std::vector<fbtc::blockchain::balance_record>"
      },
      {
        "type_name" : "snapshot_map",
        "cpp_return_type" : "std::map<std::string, fbtc::blockchain::share_type>",
        "cpp_include_file" : "fbtc/blockchain/types.hpp"
      },
      {
         "type_name" : "string_map",
         "cpp_return_type" : "std::map<std::string, std::string>"
      },
      {
         "type_name" : "wallet_balance_record",
         "cpp_return_type" : "fbtc::wallet::wallet_balance_record"
      },
      {
         "type_name" : "escrow_summary",
         "cpp_return_type" : "fbtc::wallet::escrow_summary"
      },
      {
        "type_name" : "escrow_summary_array",
        "container_type" : "array",
        "contained_type" : "escrow_summary"
      },
      {
        "type_name" : "account_record",
        "cpp_return_type" : "fbtc::blockchain::account_record",
        "cpp_include_file" : "fbtc/blockchain/types.hpp"
      },
      {
        "type_name" : "account_record_array",
        "container_type" : "array",
        "contained_type" : "account_record"
      },
      {
        "type_name" : "optional_account_record",
        "cpp_return_type" : "fc::optional<fbtc::blockchain::account_record>",
        "cpp_include_file" : "fbtc/blockchain/types.hpp"
      },
      {
        "type_name" : "signed_transactions",
        "cpp_return_type" : "fbtc::blockchain::signed_transactions"
      },
      {
        "type_name" : "string",
        "cpp_return_type" : "std::string",
        "cpp_include_file" : "string",
        "default_example" : "wallet_transfer"
      },
      {
        "type_name" : "method_name",
        "cpp_return_type" : "std::string",
        "cpp_include_file" : "string",
        "default_example" : "wallet_transfer"
      },
      {
        "type_name" : "ip_endpoint",
        "cpp_return_type" : "fc::ip::endpoint",
        "cpp_include_file" : "fc/network/ip.hpp",
        "to_variant_function" : "fbtc::api::fc_ip_endpoint_to_variant",
        "from_variant_function" : "fbtc::api::variant_to_fc_ip_endpoint",
        "default_example" : "192.168.1.5:5678"
      },
      {
        "type_name" : "optional_string",
        "cpp_return_type" : "fc::optional<std::string>"
      },
      {
        "type_name" : "optional_uint64_t",
        "cpp_return_type" : "fc::optional<uint64_t>"
      },
      {
        "type_name" : "optional_variant",
        "cpp_return_type" : "fc::optional<fc::variant>"
      },
      {
        "type_name" : "optional_variant_object",
        "cpp_return_type" : "fc::optional<fc::variant_object>"
      },
      {
        "type_name" : "variant_object",
        "cpp_return_type" : "fc::variant_object"
      },
      {
        "type_name" : "transaction_id",
        "cpp_return_type" : "fbtc::blockchain::transaction_id_type",
        "cpp_include_file" : "fbtc/blockchain/types.hpp"
      },
      {
        "type_name" : "operation_type",
        "cpp_return_type" : "fbtc::blockchain::operation_type_enum",
        "cpp_include_file" : "fbtc/blockchain/operations.hpp"
      },
      {
        "type_name" : "message_propagation_data",
       "cpp_return_type" : "fbtc::net::message_propagation_data",
        "cpp_include_file" : "fbtc/net/node.hpp"
      },
      {
        "type_name" : "node_id",
        "cpp_return_type" : "fbtc::net::node_id_t",
        "cpp_include_file" : "fbtc/net/node.hpp"
      },
      {
        "type_name" : "node_id_list",
        "container_type" : "array",
        "contained_type" : "node_id"
      },
      {
        "type_name" : "new_passphrase",
        "cpp_return_type" : "std::string",
        "cpp_include_file" : "string",
        "default_example" : "my_password",
        "obscure_in_log_files": true
      },
      {
        "type_name" : "passphrase",
        "cpp_return_type" : "std::string",
        "cpp_include_file" : "string",
        "default_example" : "my_password",
        "obscure_in_log_files": true
      },
      {
        "type_name" : "wallet_name",
        "cpp_return_type" : "std::string",
        "cpp_include_file" : "string",
        "default_example" : "alice"
      },
      {
        "type_name" : "variant",
        "cpp_return_type" : "fc::variant"
      },
      {
         "type_name" : "variants",
         "cpp_return_type" : "fc::variants"
      },
      {
         "type_name" : "parameter_list",
         "cpp_return_type" : "fc::variants"
      },
      {
         "type_name" : "parameters_list",
         "cpp_return_type" : "std::vector<fc::variants>"
      },
      {
         "type_name" : "burn_records",
         "cpp_return_type" : "std::vector<fbtc::blockchain::burn_record>"
      },
      {
        "type_name" : "wallet_name_array",
        "container_type" : "array",
        "contained_type" : "wallet_name"
      },
      {
        "type_name" : "transaction_record",
        "cpp_return_type" : "fbtc::wallet::wallet_transaction_record",
        "cpp_include_file" : "fbtc/wallet/wallet_records.hpp"
      },
      {
        "type_name" : "transaction_record_array",
        "container_type" : "array",
        "contained_type" : "transaction_record"
      },
      {
        "type_name" : "optional_wallet_name",
        "cpp_return_type" : "fc::optional<std::string>",
        "cpp_include_file" : "fc/optional.hpp",
        "default_example" : "alice"
      },
      {
        "type_name" : "time_interval_in_seconds",
        "cpp_return_type" : "fc::microseconds",
        "cpp_include_file" : "fc/time.hpp",
        "to_variant_function" : "fbtc::api::time_interval_in_seconds_to_variant",
        "from_variant_function" : "fbtc::api::variant_to_time_interval_in_seconds",
        "default_example" : 300
      },
      {
        "type_name" : "wif_private_key",
        "cpp_return_type" : "std::string",
        "cpp_include_file" : "fbtc/blockchain/types.hpp",
        "default_example" : "5KV5f8Eohi7WmuxWnP4uJzh7oX9zDEYpTbHBx5jFokSEZoUWpbB",
        "obscure_in_log_files": true
      },
      {
        "type_name" : "public_key",
        "cpp_return_type" : "fbtc::blockchain::public_key_type",
        "cpp_include_file" : "fbtc/blockchain/types.hpp"
      },
      {
        "type_name" : "public_key_summary",
        "cpp_return_type" : "fbtc::wallet::public_key_summary",
        "cpp_include_file" : "fbtc/wallet/pretty.hpp"
      },
      {
        "type_name" : "public_key_summary_array",
        "container_type" : "array",
        "contained_type" : "public_key_summary"
      },
      {
        "type_name" : "blockchain_transaction_record",
        "cpp_return_type" : "fbtc::blockchain::transaction_record",
        "cpp_include_file" : "fbtc/blockchain/block_record.hpp"
      },
      {
        "type_name" : "blockchain_transaction_record_array",
        "container_type" : "array",
        "contained_type" : "blockchain_transaction_record"
      },
      {
        "type_name" : "transaction_record_map",
        "cpp_return_type" : "std::map<fbtc::blockchain::transaction_id_type, fbtc::blockchain::transaction_record>"
      },
      {
        "type_name" : "transaction_record_pair",
        "cpp_return_type" : "std::pair<fbtc::blockchain::transaction_id_type, fbtc::blockchain::transaction_record>"
      },
      {
        "type_name" : "signed_transaction",
        "cpp_return_type" : "fbtc::blockchain::signed_transaction",
        "cpp_include_file" : "fbtc/blockchain/transaction.hpp"
      },
      {
        "type_name" : "signed_transaction_array",
        "container_type" : "array",
        "contained_type" : "signed_transaction"
      },
      {
        "type_name" : "optional_signed_transaction",
        "cpp_return_type" : "fc::optional<fbtc::blockchain::signed_transaction>",
        "cpp_include_file" : "fc/optional.hpp"
      },
      {
        "type_name" : "share_type",
        "cpp_return_type" : "fbtc::blockchain::share_type"
      },
      {
        "type_name" : "asset",
        "cpp_return_type" : "fbtc::blockchain::asset"
      },
      {
        "type_name" : "asset_array",
        "container_type" : "array",
        "contained_type" : "asset"
      },
      {
        "type_name" : "pretty_transaction",
        "cpp_return_type" : "fbtc::wallet::pretty_transaction",
        "cpp_include_file" : "fbtc/wallet/pretty.hpp"
      },
      {
        "type_name" : "pretty_transactions",
        "cpp_return_type" : "std::vector<fbtc::wallet::pretty_transaction>",
        "cpp_include_file" : "fbtc/wallet/pretty.hpp"
      },
      {
        "type_name" : "experimental_transactions",
        "cpp_return_type" : "std::set<fbtc::wallet::pretty_transaction_experimental>"
      },
      {
         "type_name" : "withdraw_condition_type",
         "cpp_return_type" : "fbtc::blockchain::withdraw_condition_types"
      },
      {
         "type_name" : "account_balance_summary_type",
         "cpp_return_type" : "fbtc::wallet::account_balance_summary_type"
      },
      {
         "type_name" : "account_balance_id_summary_type",
         "cpp_return_type" : "fbtc::wallet::account_balance_id_summary_type"
      },
      {
         "type_name" : "account_extended_balance_type",
         "cpp_return_type" : "fbtc::wallet::account_extended_balance_type"
      },
      {
         "type_name" : "account_vesting_balance_summary_type",
         "cpp_return_type" : "fbtc::wallet::account_vesting_balance_summary_type"
      },
      {
         "type_name" : "market_order",
         "cpp_return_type" : "fbtc::blockchain::market_order"
      },
      {
         "type_name" : "market_order_array",
         "container_type" : "array",
         "contained_type" : "market_order"
      },
      {
         "type_name" : "order_id",
         "cpp_return_type" : "fbtc::blockchain::order_id_type"
      },
      {
         "type_name" : "order_ids",
         "container_type" : "array",
         "contained_type" : "order_id"
      },
      {
         "type_name" : "order_description",
         "cpp_return_type" : "fbtc::wallet::order_description",
         "cpp_include_file" : "fbtc/wallet/wallet.hpp"
      },
      {
         "type_name" : "order_descriptions",
         "container_type" : "array",
         "contained_type" : "order_description"
      },
      {
         "type_name" : "market_order_map",
         "cpp_return_type" : "std::map<fbtc::blockchain::order_id_type, fbtc::blockchain::market_order>"
      },
      {
         "type_name" : "pair<market_order_array,market_order_array>",
         "cpp_return_type" : "std::pair<std::vector<fbtc::blockchain::market_order>,std::vector<fbtc::blockchain::market_order>>"
      },
      {
         "type_name" : "vector<std::pair<string, wallet_transaction_record>>",
         "cpp_return_type" : "std::vector<std::pair<std::string, fbtc::wallet::wallet_transaction_record>>"
      },
      {
        "type_name" : "amount",
        "cpp_parameter_type" : "int64_t",
        "cpp_return_type" : "int64_t",
        "cpp_include_file" : "stdint.h",
        "default_example" : 10000
      },
      {
        "type_name" : "receive_account_name",
        "cpp_return_type" : "std::string",
        "cpp_include_file" : "string",
        "default_example" : "Bob"
      },
      {
        "type_name" : "sending_account_name",
        "cpp_return_type" : "std::string",
        "cpp_include_file" : "string",
        "default_example" : "alice"
      },
      {
        "type_name" : "asset_symbol",
        "cpp_return_type" : "std::string",
        "cpp_include_file" : "string",
        "default_example" : "XTS"
      },
      {
        "type_name" : "invoice_summary",
        "cpp_return_type" : "fbtc::wallet::invoice_summary",
        "cpp_include_file" : "fbtc/wallet/wallet.hpp"
      },
      {
        "type_name" : "filename",
        "cpp_return_type" : "fc::path",
        "cpp_include_file" : "fc/filesystem.hpp",
        "default_example" : "some_filename.txt"
      },
      {
        "type_name" : "digest",
        "cpp_return_type" : "fbtc::blockchain::digest_type"
      },
      {
        "type_name" : "address",
        "cpp_return_type" : "fbtc::blockchain::address",
        "cpp_include_file" : "fbtc/blockchain/address.hpp"
      },
      {
        "type_name" : "legacy_address",
        "cpp_return_type" : "fbtc::blockchain::pts_address",
        "cpp_include_file" : "fbtc/blockchain/pts_address.hpp"
      },
      {
        "type_name" : "full_block",
        "cpp_return_type" : "fbtc::blockchain::full_block",
        "cpp_include_file" : "fbtc/blockchain/block.hpp"
      },
      {
        "type_name" : "digest_block",
        "cpp_return_type" : "fbtc::blockchain::digest_block",
        "cpp_include_file" : "fbtc/blockchain/block.hpp"
      },
      {
        "type_name" : "odigest_block",
        "cpp_return_type" : "fc::optional<fbtc::blockchain::digest_block>",
        "cpp_include_file" : "fbtc/blockchain/block.hpp"
      },
      {
        "type_name" : "account_id_type",
        "cpp_return_type" : "fbtc::blockchain::account_id_type",
        "cpp_include_file" : "fbtc/blockchain/types.hpp"
      },
      {
         "type_name" : "account_id_array",
         "container_type" : "array",
         "contained_type" : "account_id_type"
      },
      {
        "type_name" : "asset_record",
        "cpp_return_type" : "fbtc::blockchain::asset_record",
        "cpp_include_file" : "fbtc/blockchain/asset_record.hpp"
      },
      {
        "type_name" : "asset_record_array",
        "container_type" : "array",
        "contained_type" : "asset_record"
      },
      {
        "type_name" : "optional_asset_record",
        "cpp_return_type" : "fc::optional<fbtc::blockchain::asset_record>",
        "cpp_include_file" : "fbtc/blockchain/asset_record.hpp"
      },
      {
        "type_name" : "asset_id_type",
        "cpp_return_type" : "fbtc::blockchain::asset_id_type",
        "cpp_include_file" : "fbtc/blockchain/types.hpp"
      },
      {
        "type_name" : "asset_balance_map",
        "cpp_return_type" : "std::map<fbtc::blockchain::asset_id_type, fbtc::blockchain::share_type>"
      },
      {
        "type_name" : "wallet_account_record",
        "cpp_return_type" : "fbtc::wallet::wallet_account_record"
      },
      {
        "type_name" : "owallet_account_record",
        "cpp_return_type" : "fbtc::wallet::owallet_account_record"
      },
      {
        "type_name" : "wallet_account_record_array",
        "container_type" : "array",
        "contained_type" : "wallet_account_record"
      },
      {
        "type_name" : "wallet_contact_record",
        "cpp_return_type" : "fbtc::wallet::wallet_contact_record"
      },
      {
        "type_name" : "owallet_contact_record",
        "cpp_return_type" : "fbtc::wallet::owallet_contact_record"
      },
      {
        "type_name" : "wallet_contact_record_array",
        "container_type" : "array",
        "contained_type" : "wallet_contact_record"
      },
      {
        "type_name" : "wallet_approval_record",
        "cpp_return_type" : "fbtc::wallet::wallet_approval_record"
      },
      {
        "type_name" : "owallet_approval_record",
        "cpp_return_type" : "fbtc::wallet::owallet_approval_record"
      },
      {
        "type_name" : "wallet_approval_record_array",
        "container_type" : "array",
        "contained_type" : "wallet_approval_record"
      },
      {
        "type_name" : "address_list",
        "container_type" : "array",
        "contained_type" : "address"
      },
      {
          "type_name" : "size",
          "cpp_parameter_type" : "uint64_t",
          "cpp_return_type" : "uint64_t",
          "cpp_include_file" : "stdint.h",
          "default_example" : 10
      },
      {
          "type_name" : "map< address, amount >",
          "cpp_return_type" : "std::unordered_map< fbtc::blockchain::address, int64_t >",
          "cpp_include_file" : "fbtc/blockchain/address.hpp"
      },
      {
          "type_name" : "name",
          "cpp_return_type" : "std::string",
          "cpp_include_file" : "string",
          "default_example" : "George"
      },
      {
          "type_name" : "brainkey",
          "cpp_return_type" : "std::string",
          "cpp_include_file" : "string",
          "default_example" : "*1+1!=2",
          "obscure_in_log_files": true
      },
      {
          "type_name" : "keyhoteeid",
          "cpp_return_type" : "std::string",
          "cpp_include_file" : "string",
          "default_example" : "Alice"
      },
      {
         "type_name" : "map< account_name, share_type >",
         "cpp_return_type" : "std::unordered_map< std::string, fbtc::blockchain::share_type >"
      },
      {
         "type_name" : "block_record",
         "cpp_return_type" : "fbtc::blockchain::block_record"
      },
      {
         "type_name" : "oblock_record",
         "cpp_return_type" : "fc::optional<fbtc::blockchain::block_record>"
      },
      {
         "type_name" : "block_record_array",
         "container_type" : "array",
         "contained_type" : "block_record"
      },
      {
         "type_name" : "account_vote_summary",
         "cpp_return_type" : "fbtc::wallet::account_vote_summary_type"
      },
      {
         "type_name" : "timestamp",
         "cpp_return_type" : "fc::time_point"
      },
      {
         "type_name" : "slate_id_type",
         "cpp_return_type" : "fbtc::blockchain::slate_id_type"
      },
      {
         "type_name" : "method_data",
         "cpp_return_type" : "fbtc::api::method_data",
         "cpp_include_file" : "fbtc/api/api_metadata.hpp"
      },
      {
         "type_name" : "method_map_type",
         "container_type" : "dictionary",
         "key_type" : "std::string",
         "value_type" : "method_data"
      },
      {
         "type_name" : "exception",
         "cpp_return_type" : "fc::exception",
         "cpp_include_file" : "fc/exception/exception.hpp"
      },
      {
         "type_name" : "error_map",
         "container_type" : "dictionary",
         "key_type" : "timestamp",
         "value_type" : "exception"
      },
      {
         "type_name" : "brief_error_map",
         "container_type" : "dictionary",
         "key_type" : "timestamp",
         "value_type" : "std::string"
      },
      {
         "type_name" : "potential_peer_record",
         "cpp_return_type" : "fbtc::net::potential_peer_record",
         "cpp_return_type" : "fbtc/net/peer_database.hpp"
      },
      {
         "type_name" : "potential_peer_record_array",
         "container_type" : "array",
         "contained_type" : "potential_peer_record"
      },
      {
          "type_name" : "uint32_t_array",
          "container_type" : "array",
          "contained_type" : "uint32_t"
      },
      {
          "type_name" : "string_array",
          "container_type" : "array",
          "contained_type" : "string"
      },
      {
          "type_name" : "map<account_id_type, string>",
          "cpp_return_type" : "std::map<fbtc::blockchain::account_id_type, std::string>"
      },
      {
          "type_name" : "slot_records_list",
          "cpp_return_type" : "std::vector<fbtc::blockchain::slot_record>",
          "cpp_include_file" : "fbtc/blockchain/block_record.hpp"
      },
      {
          "type_name" : "map<uint32_t, vector<fork_record>>",
          "cpp_return_type" : "std::map<uint32_t, std::vector<fbtc::blockchain::fork_record>>",
          "cpp_include_file" : "fbtc/blockchain/chain_database.hpp"
      },
      {
          "type_name" : "map<transaction_id_type, fc::exception>",
          "cpp_return_type" : "std::map<fbtc::blockchain::transaction_id_type, fc::exception>"
      },
      {
          "type_name" : "compact_signature",
          "cpp_return_type" : "fc::ecc::compact_signature",
          "cpp_include_file" : "fc/crypto/elliptic.hpp"
      },
      {
          "type_name" : "sha256",
          "cpp_return_type" : "fc::sha256",
          "cpp_include_file" : "fc/crypto/sha256.hpp"
      },
      {
          "type_name" : "market_transaction",
          "cpp_return_type" : "fbtc::blockchain::market_transaction"
      },
      {
        "type_name" : "market_transaction_array",
        "container_type": "array",
        "contained_type": "market_transaction"
      },
      {
        "type_name" : "order_history_record",
        "cpp_return_type": "fbtc::blockchain::order_history_record",
        "cpp_include_file": "fbtc/blockchain/market_records.hpp"
      },
      {
        "type_name" : "order_history_record_array",
        "container_type": "array",
        "contained_type": "order_history_record"
      },
      {
        "type_name" : "market_history_points",
        "cpp_return_type" : "fbtc::blockchain::market_history_points",
        "cpp_include_file" : "fbtc/blockchain/market_records.hpp"
      },
      {
        "type_name" : "market_history_key::time_granularity",
        "cpp_return_type" : "fbtc::blockchain::market_history_key::time_granularity_enum",
        "cpp_include_file" : "fbtc/blockchain/market_records.hpp"
      },
      {
        "type_name" : "market_status",
        "cpp_return_type" : "fbtc::blockchain::string_status_record"
      },
      {
        "type_name" : "market_status_array",
        "container_type": "array",
        "contained_type": "market_status"
      },
      {
        "type_name" : "vote_strategy",
        "cpp_return_type" : "fbtc::wallet::vote_strategy"
      },
      {
        "type_name" : "account_key_type",
        "cpp_return_type" : "fbtc::wallet::account_key_type"
      },
      {
        "type_name" : "wallet_record_type",
        "cpp_return_type" : "fbtc::wallet::wallet_record_type_enum"
      },
      {
        "type_name" : "asset_flag_enum",
        "cpp_return_type" : "fbtc::blockchain::asset_record::flag_enum"
      },
      {
        "type_name" : "feed_entry_list",
        "cpp_return_type" : "std::vector<fbtc::blockchain::feed_entry>",
        "cpp_include_file" : "fbtc/blockchain/feed_operations.hpp"
      },
      {
        "type_name" : "snapshot_record_list",
        "cpp_return_type" : "std::vector<fbtc::blockchain::snapshot_record>"
      },
      {
        "type_name" : "transaction_builder",
        "cpp_return_type" : "fbtc::wallet::transaction_builder",
        "cpp_include_file" : "fbtc/wallet/transaction_builder.hpp"
      },
      {
        "type_name" : "optional_transaction_builder",
        "cpp_return_type" : "fc::optional<fbtc::wallet::transaction_builder>",
        "cpp_include_file" : "fbtc/blockchain/types.hpp"
      }
    ]
}
